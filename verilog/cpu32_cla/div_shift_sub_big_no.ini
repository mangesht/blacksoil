loadi @15,8
loadi @1,55
loadi @0,44
sll @1,@1,@15
add @1,@1,@0
loadi @0,33
sll @1,@1,@15
add @1,@1,@0
loadi @0,22
sll @1,@1,@15
add @1,@1,@0   // Complete loading of @1 
loadi @2,16
loadi @0,00
sll @2,@2,@15
add @2,@2,@0
loadi @0,0
sll @2,@2,@15
add @2,@2,@0
loadi @0,00
sll @2,@2,@15
add @2,@2,@0
loadi @3,0      // Completed loading of @2
loadi @5,1     // @5 is used for increment 
loadi @9,0   // Load mask register at @9
sub @9,@9,@5  // Mask is loaded with ffff_ffff
loadi @6,0     // Quotient initialised to 0 
loadi @8,0     // This is ZERO 
loadi @7,31     // This count is used to shift for_loop
srl @3,@1,@7   // Loop starts here for_loop_start
srl @9,@9,@5
sub @4,@3,@2
sll @6,@6,@5 
jnc 37            // jump to shift --
add @6,@6,@5    // Quotient++
and @1,@1,@9    // a = a . mask 
sll @4,@4,@7 
add @1,@1,@4 
sub @7,@7,@5    // Shift--
jc 28        // Jump to for_loop_start 
stop  
